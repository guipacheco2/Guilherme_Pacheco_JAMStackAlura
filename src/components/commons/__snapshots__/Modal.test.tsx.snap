// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Modal /> when visibility is closed not render content 1`] = `
.c2 {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c5 {
  width: 24px;
  height: 24px;
  color: #34515E;
  background-color: transparent;
  border: none;
  outline: none;
  cursor: pointer;
}

.c3 {
  box-shadow: 0px 1px 25px 5px rgba(0,0,0,0.5);
  border-radius: 10px 10px 0px 0px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  background-color: #fff;
  padding: 16px 16px 48px 16px;
  background-color: #FAFAFA;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  background: rgba(0,0,0,0.5);
  position: fixed;
  z-index: 100;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  overflow: hidden;
  -webkit-transition: 0.3s;
  transition: 0.3s;
  opacity: 0;
  pointer-events: none;
}

@media only screen and (min-width:0px) {
  .c2 {
    max-width: initial;
    padding-right: 16px;
    padding-left: 16px;
  }
}

@media only screen and (min-width:600px) {
  .c2 {
    max-width: 600px;
    padding-right: 24px;
    padding-left: 24px;
  }
}

@media only screen and (min-width:1024px) {

}

@media only screen and (min-width:1440px) {

}

@media only screen and (min-width:1920px) {

}

<body>
  <div>
    <div
      class="c0"
    >
      <div
        class="c1"
        data-testid="modal-overlay"
      >
        <div
          class="c2"
        >
          <div
            class="c3"
          >
            <div
              class="c4"
            >
              <button
                class="c5"
              >
                <svg
                  fill="none"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                    fill="currentColor"
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`<Modal /> when visibility is open render content 1`] = `
<body>
  .c2 {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c5 {
  width: 24px;
  height: 24px;
  color: #34515E;
  background-color: transparent;
  border: none;
  outline: none;
  cursor: pointer;
}

.c3 {
  box-shadow: 0px 1px 25px 5px rgba(0,0,0,0.5);
  border-radius: 10px 10px 0px 0px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  background-color: #fff;
  padding: 16px 16px 48px 16px;
  background-color: #FAFAFA;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  background: rgba(0,0,0,0.5);
  position: fixed;
  z-index: 100;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  overflow: hidden;
  -webkit-transition: 0.3s;
  transition: 0.3s;
  opacity: 1;
  pointer-events: all;
}

@media only screen and (min-width:0px) {
  .c2 {
    max-width: initial;
    padding-right: 16px;
    padding-left: 16px;
  }
}

@media only screen and (min-width:600px) {
  .c2 {
    max-width: 600px;
    padding-right: 24px;
    padding-left: 24px;
  }
}

@media only screen and (min-width:1024px) {

}

@media only screen and (min-width:1440px) {

}

@media only screen and (min-width:1920px) {

}

<div>
    <div
      class="c0"
    >
      <div
        class="c1"
        data-testid="modal-overlay"
      >
        <div
          class="c2"
        >
          <div
            class="c3"
          >
            <div
              class="c4"
            >
              <button
                class="c5"
              >
                <svg
                  fill="none"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                    fill="currentColor"
                  />
                </svg>
              </button>
            </div>
            <div
              data-testid="content"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
`;
